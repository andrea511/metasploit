<?xml version="1.0" encoding="UTF-8"?>
<jasperReport xmlns="http://jasperreports.sourceforge.net/jasperreports" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd" name="msfxv3_credential_graphs" language="groovy" pageWidth="572" pageHeight="752" columnWidth="555" leftMargin="0" rightMargin="0" topMargin="0" bottomMargin="0" uuid="63c710e2-b8c0-4e4d-8a56-20d5875eef3f">
	<property name="ireport.zoom" value="1.0"/>
	<property name="ireport.x" value="0"/>
	<property name="ireport.y" value="0"/>
	<property name="ireport.callouts" value="##Fri Jun 27 15:54:26 CDT 2014\ncallouts.2.text=Credentials by Service\ncallouts.1.text=Credentials by Host\ncallouts.2.bounds=352,525,176,42\ncallouts.1.bounds=63,524,159,41"/>
	<subDataset name="CredentialsByService" uuid="7ba50d68-0bc7-4dc9-925a-b8abffd5acfa">
		<parameter name="workspace_id" class="java.lang.Integer">
			<defaultValueExpression><![CDATA[0]]></defaultValueExpression>
		</parameter>
		<parameter name="host_address_clause" class="java.lang.String" isForPrompting="false">
			<defaultValueExpression><![CDATA["hosts.address is not null"]]></defaultValueExpression>
		</parameter>
		<queryString>
			<![CDATA[--
-- Count of credentials per service name.
-- This includes: creds from services and creds with logins.
--
WITH cores_with_service_origins as (
  -- Core, service name
  select
    cores.id AS core_id,
    coalesce(services.name, concat(services.proto, ' - ', services.port)) AS service_name
    from metasploit_credential_cores cores
    inner join metasploit_credential_origin_services svc_origins ON (
      cores.origin_id = svc_origins.id AND
      cores.origin_type = 'Metasploit::Credential::Origin::Service'
    )
    inner join services   ON (svc_origins.service_id = services.id)
    inner join hosts      ON (services.host_id = hosts.id)
    where hosts.workspace_id = $P{workspace_id}
    and $P!{host_address_clause}
),

cores_with_logins AS (
  -- Core, service name, host address
  select
    cores.id AS core_id,
    coalesce(services.name, concat(services.proto, ' - ', services.port)) AS service_name
    from metasploit_credential_cores cores
    inner join metasploit_credential_logins logins ON (cores.id = logins.core_id)
    inner join services   ON (logins.service_id = services.id)
    inner join hosts      ON (services.host_id = hosts.id)
    where hosts.workspace_id = $P{workspace_id}
    and $P!{host_address_clause}
    and logins.status = 'Successful'
)

select
  cores.service_name, count(cores.core_id) AS cred_count

  from
  (
    select core_id, service_name from cores_with_logins
      UNION DISTINCT
    select core_id, service_name from cores_with_service_origins
  ) cores
group by service_name
order by cred_count desc]]>
		</queryString>
		<field name="service_name" class="java.lang.String"/>
		<field name="cred_count" class="java.lang.Integer"/>
	</subDataset>
	<subDataset name="CredentialsByHost" uuid="9ef06b5b-eccb-4891-bb40-f5bb1d674faf">
		<parameter name="host_address_clause" class="java.lang.String" isForPrompting="false">
			<defaultValueExpression><![CDATA["hosts.address is not null"]]></defaultValueExpression>
		</parameter>
		<parameter name="workspace_id" class="java.lang.Integer">
			<defaultValueExpression><![CDATA[0]]></defaultValueExpression>
		</parameter>
		<queryString>
			<![CDATA[--
-- Count of credentials per host.
-- This includes: creds from sessions, creds from services,
-- and creds with logins.
-- Grouped by host ID to avoid hostname collisions.
--
WITH cores_with_service_origins as (
  -- Core, service name, host address
  select
    cores.id AS core_id,
    services.name AS service_name,
    hosts.id as host_id,
    COALESCE(hosts.name, HOST(hosts.address)) as host_name
    from metasploit_credential_cores cores
    inner join metasploit_credential_origin_services svc_origins ON (
      cores.origin_id = svc_origins.id AND
      cores.origin_type = 'Metasploit::Credential::Origin::Service'
    )
    inner join services   ON (svc_origins.service_id = services.id)
    inner join hosts      ON (services.host_id = hosts.id)
    where hosts.workspace_id = $P{workspace_id}
    and $P!{host_address_clause}
),

cores_with_session_origins AS (
  -- Core, session exploit, host address
  select
    cores.id AS core_id,
    sessions.via_exploit AS session_exploit,
    hosts.id as host_id,
    COALESCE(hosts.name, HOST(hosts.address)) as host_name
    from metasploit_credential_cores cores
    inner join metasploit_credential_origin_sessions session_origins ON (
      cores.origin_id = session_origins.id AND
      cores.origin_type = 'Metasploit::Credential::Origin::Session'
    )
    inner join sessions   ON (session_origins.session_id = sessions.id)
    inner join hosts      ON (sessions.host_id = hosts.id)
    where hosts.workspace_id = $P{workspace_id}
    and $P!{host_address_clause}
),

cores_with_logins AS (
  -- Core, service name, host address
  select
    cores.id AS core_id,
    services.name AS service_name,
    hosts.id as host_id,
    COALESCE(hosts.name, HOST(hosts.address)) as host_name
    from metasploit_credential_cores cores
    inner join metasploit_credential_logins logins ON (cores.id = logins.core_id)
    inner join services   ON (logins.service_id = services.id)
    inner join hosts      ON (services.host_id = hosts.id)
    where hosts.workspace_id = $P{workspace_id}
    and $P!{host_address_clause}
    and logins.status = 'Successful'
)

select
  cores.host_name, count(cores.core_id) AS cred_count
  from
  (
    select core_id, host_id, host_name from cores_with_logins
      UNION DISTINCT
    select core_id, host_id, host_name from cores_with_service_origins
      UNION DISTINCT
    select core_id, host_id, host_name from cores_with_session_origins
  ) cores
group by host_id, host_name
order by cred_count desc]]>
		</queryString>
		<field name="cred_count" class="java.lang.Integer"/>
		<field name="host_name" class="java.lang.String"/>
	</subDataset>
	<parameter name="workspace_id" class="java.lang.Integer">
		<defaultValueExpression><![CDATA[0]]></defaultValueExpression>
	</parameter>
	<parameter name="host_address_clause" class="java.lang.String" isForPrompting="false">
		<defaultValueExpression><![CDATA["hosts.address is not null"]]></defaultValueExpression>
	</parameter>
	<parameter name="reporting_dir" class="java.lang.String"/>
	<parameter name="style_template_dir" class="java.lang.String">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<queryString>
		<![CDATA[select 1]]>
	</queryString>
	<summary>
		<band height="570">
			<pieChart>
				<chart isShowLegend="false" customizerClass="com.jaspersoft.bizdev.PieLabels" theme="se_charts">
					<reportElement uuid="3497a523-7efa-42ba-8005-72f9b07e2d55" x="0" y="272" width="280" height="295"/>
					<chartTitle color="#666666">
						<font size="12" isBold="true"/>
						<titleExpression><![CDATA["Credentials by Host"]]></titleExpression>
					</chartTitle>
					<chartSubtitle/>
					<chartLegend>
						<font size="8"/>
					</chartLegend>
				</chart>
				<pieDataset minPercentage="5.0">
					<dataset>
						<datasetRun subDataset="CredentialsByHost" uuid="57e290d9-e32a-407c-a44e-6a272551b2fb">
							<datasetParameter name="workspace_id">
								<datasetParameterExpression><![CDATA[$P{workspace_id}]]></datasetParameterExpression>
							</datasetParameter>
							<datasetParameter name="host_address_clause">
								<datasetParameterExpression><![CDATA[$P{host_address_clause}]]></datasetParameterExpression>
							</datasetParameter>
						</datasetRun>
					</dataset>
					<keyExpression><![CDATA[$F{host_name}]]></keyExpression>
					<valueExpression><![CDATA[$F{cred_count}]]></valueExpression>
				</pieDataset>
				<piePlot isShowLabels="true" labelFormat="{0}: {1}">
					<plot/>
					<itemLabel color="#000000" backgroundColor="#FFFFFF">
						<font size="5"/>
					</itemLabel>
				</piePlot>
			</pieChart>
			<pieChart>
				<chart isShowLegend="false" customizerClass="com.jaspersoft.bizdev.PieLabels" theme="se_charts">
					<reportElement uuid="1e6c153d-6a26-435e-bbc3-8f01664ba726" x="291" y="272" width="280" height="295"/>
					<chartTitle color="#666666">
						<font size="12" isBold="true"/>
						<titleExpression><![CDATA["Credentials by Service"]]></titleExpression>
					</chartTitle>
					<chartSubtitle/>
					<chartLegend>
						<font size="8"/>
					</chartLegend>
				</chart>
				<pieDataset minPercentage="5.0">
					<dataset>
						<datasetRun subDataset="CredentialsByService" uuid="0eb1cd2e-6007-453a-85cd-cbe6fc1b2ce7">
							<datasetParameter name="workspace_id">
								<datasetParameterExpression><![CDATA[$P{workspace_id}]]></datasetParameterExpression>
							</datasetParameter>
							<datasetParameter name="host_address_clause">
								<datasetParameterExpression><![CDATA[$P{host_address_clause}]]></datasetParameterExpression>
							</datasetParameter>
						</datasetRun>
					</dataset>
					<keyExpression><![CDATA[$F{service_name}]]></keyExpression>
					<valueExpression><![CDATA[$F{cred_count}]]></valueExpression>
				</pieDataset>
				<piePlot isShowLabels="true" labelFormat="{0}: {1}">
					<plot/>
					<itemLabel color="#000000" backgroundColor="#FFFFFF">
						<font size="5"/>
					</itemLabel>
				</piePlot>
			</pieChart>
			<subreport>
				<reportElement uuid="d03827bd-2ea6-4c4b-8920-ce8ab4ed6026" x="0" y="0" width="572" height="272"/>
				<subreportParameter name="style_template_dir">
					<subreportParameterExpression><![CDATA[$P{style_template_dir}]]></subreportParameterExpression>
				</subreportParameter>
				<subreportParameter name="workspace_id">
					<subreportParameterExpression><![CDATA[$P{workspace_id}]]></subreportParameterExpression>
				</subreportParameter>
				<subreportParameter name="host_address_clause">
					<subreportParameterExpression><![CDATA[$P{host_address_clause}]]></subreportParameterExpression>
				</subreportParameter>
				<connectionExpression><![CDATA[$P{REPORT_CONNECTION}]]></connectionExpression>
				<subreportExpression><![CDATA[$P{reporting_dir} + "shared_templates/" + "credential_graphs.jasper"]]></subreportExpression>
			</subreport>
		</band>
	</summary>
</jasperReport>
