<?xml version="1.0" encoding="UTF-8"?>
<jasperReport xmlns="http://jasperreports.sourceforge.net/jasperreports" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd" name="credential_graphs" language="groovy" pageWidth="572" pageHeight="752" columnWidth="555" leftMargin="0" rightMargin="0" topMargin="0" bottomMargin="0" uuid="86286569-f826-4adf-a19f-77b748b9410d">
	<property name="ireport.zoom" value="1.0"/>
	<property name="ireport.x" value="0"/>
	<property name="ireport.y" value="0"/>
	<template><![CDATA[$P{style_template_dir} + "common_styles.jrtx"]]></template>
	<subDataset name="CredentialsDataset" uuid="4926a100-4557-4faf-b77c-6e24e593b30f">
		<parameter name="workspace_id" class="java.lang.Integer"/>
		<parameter name="host_address_clause" class="java.lang.String" isForPrompting="false">
			<parameterDescription><![CDATA[Enter "hosts.address is not null" without quotes, or a valid SQL statement to select among hosts.]]></parameterDescription>
			<defaultValueExpression><![CDATA["hosts.address is not null"]]></defaultValueExpression>
		</parameter>
		<parameter name="desired_type" class="java.lang.String" isForPrompting="false"/>
		<parameter name="host_filter" class="java.lang.String" isForPrompting="false">
			<parameterDescription><![CDATA[If host_address_clause is not default value, this adds filtering of the queried cores to the specified hosts.]]></parameterDescription>
			<defaultValueExpression><![CDATA[$P{host_address_clause} != "hosts.address is not null" ?
  "inner join host_cores ON (cores.id = host_cores.core_id)" :
  ""]]></defaultValueExpression>
		</parameter>
		<queryString>
			<![CDATA[--
-- For all credential cores within the workspace:
-- core count and either friendly Private Type or friendly Origin.
-- Count is aggregated on passed param to allow this query to serve
-- for both the by Type and by Origin graphs.
--

--
-- The CTEs are to create a table of core IDs and host IDs. If a host
-- white/black list has been set, then we need to filter the cores to be
-- shown by their host connected. If no filtering is desired, then these
-- are not used at all since not all creds are connected with a host.
--
WITH cores_with_service_origins as (
  -- Core, service name, host address
  select
    cores.id AS core_id,
    services.name AS service_name,
    hosts.id as host_id
    from metasploit_credential_cores cores
    inner join metasploit_credential_origin_services svc_origins ON (
      cores.origin_id = svc_origins.id AND
      cores.origin_type = 'Metasploit::Credential::Origin::Service'
    )
    inner join services   ON (svc_origins.service_id = services.id)
    inner join hosts      ON (services.host_id = hosts.id)
    where hosts.workspace_id = $P{workspace_id}
    and $P!{host_address_clause}
),

cores_with_session_origins AS (
  -- Core, session exploit, host address
  select
    cores.id AS core_id,
    sessions.via_exploit AS session_exploit,
    hosts.id as host_id
    from metasploit_credential_cores cores
    inner join metasploit_credential_origin_sessions session_origins ON (
      cores.origin_id = session_origins.id AND
      cores.origin_type = 'Metasploit::Credential::Origin::Session'
    )
    inner join sessions   ON (session_origins.session_id = sessions.id)
    inner join hosts      ON (sessions.host_id = hosts.id)
    where hosts.workspace_id = $P{workspace_id}
    and $P!{host_address_clause}
),

cores_with_logins AS (
  -- Core, service name, host address
  select
    cores.id AS core_id,
    services.name AS service_name,
    hosts.id as host_id
    from metasploit_credential_cores cores
    inner join metasploit_credential_logins logins ON (cores.id = logins.core_id)
    inner join services   ON (logins.service_id = services.id)
    inner join hosts      ON (services.host_id = hosts.id)
    where hosts.workspace_id = $P{workspace_id}
    and $P!{host_address_clause}
    and logins.status = 'Successful'
),

host_cores AS
  (
    select core_id, host_id from cores_with_logins
      UNION DISTINCT
    select core_id, host_id from cores_with_service_origins
      UNION DISTINCT
    select core_id, host_id from cores_with_session_origins
  ),

cores as (
	select
	  cores.id as core_id,
	  -- TODO: Fragile magic number
	  (case split_part(privates.type, '::', 3)
	  -- TODO Manual friendly mapping
	    when 'SSHKey' then 'SSH Key'
	    when 'NTLMHash' then 'NTLM Hash'
              when 'NonreplayableHash' then 'Non-replayable Hash'
	    when 'Password' then 'Password'
	    else 'None'
	  end) as private_type,
	  -- Friendly version of core origin
	  (case
	    when (import_origins.filename    is not null) then 'Import'
	    when (manual_origins.user_id     is not null) then 'Manual'
	    when (svc_origins.service_id     is not null) then 'Service'
	    when (session_origins.session_id is not null) then 'Session'
	    when (cracked_origins.id         is not null) then 'Cracked'
              else 'Unknown'
	  end) as origin_type

	  from metasploit_credential_cores cores
	  left outer join metasploit_credential_origin_imports import_origins ON (
	    cores.origin_id = import_origins.id AND
	    cores.origin_type = 'Metasploit::Credential::Origin::Import'
	  )
	  left outer join metasploit_credential_origin_manuals manual_origins ON (
	    cores.origin_id = manual_origins.id AND
	    cores.origin_type = 'Metasploit::Credential::Origin::Manual'
	  )
	    left outer join metasploit_credential_origin_services svc_origins ON (
	    cores.origin_id = svc_origins.id AND
	    cores.origin_type = 'Metasploit::Credential::Origin::Service'
	  )
	  left outer join metasploit_credential_origin_sessions session_origins ON (
	    cores.origin_id = session_origins.id AND
	    cores.origin_type = 'Metasploit::Credential::Origin::Session'
	  )
	  left outer join metasploit_credential_origin_cracked_passwords cracked_origins ON (
	    cores.origin_id = cracked_origins.id AND
	    cores.origin_type = 'Metasploit::Credential::Origin::CrackedPassword'
	  )
	  left outer join metasploit_credential_publics publics ON (cores.public_id = publics.id)
	  left outer join metasploit_credential_privates privates ON (cores.private_id = privates.id)
	  $P!{host_filter}

	  where cores.workspace_id = $P{workspace_id}
)

select
  count(core_id) item_count, $P!{desired_type}_type as item_type
  from cores
  group by $P!{desired_type}_type
  order by item_count desc]]>
		</queryString>
		<field name="item_type" class="java.lang.String"/>
		<field name="item_count" class="java.lang.Integer"/>
	</subDataset>
	<parameter name="workspace_id" class="java.lang.Integer"/>
	<parameter name="host_address_clause" class="java.lang.String" isForPrompting="false">
		<parameterDescription><![CDATA[Enter "hosts.address is not null" without quotes, or a valid SQL statement to select among hosts.]]></parameterDescription>
		<defaultValueExpression><![CDATA["hosts.address is not null"]]></defaultValueExpression>
	</parameter>
	<parameter name="style_template_dir" class="java.lang.String">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<queryString language="SQL">
		<![CDATA[select 1]]>
	</queryString>
	<detail>
		<band height="270" splitType="Stretch">
			<textField>
				<reportElement uuid="24eb3a91-b714-4830-adfc-187636addfef" style="Graph title" mode="Opaque" x="0" y="0" width="286" height="20"/>
				<textElement/>
				<textFieldExpression><![CDATA["Credential Origins"]]></textFieldExpression>
			</textField>
			<pieChart>
				<chart customizerClass="com.jaspersoft.bizdev.PieLabels" theme="se_charts">
					<reportElement uuid="2a55e962-0786-41de-be07-7f2548cd4593" x="0" y="20" width="286" height="250"/>
					<chartTitle/>
					<chartSubtitle/>
					<chartLegend/>
				</chart>
				<pieDataset maxCount="10">
					<dataset>
						<datasetRun subDataset="CredentialsDataset" uuid="27e7d99f-e94d-495c-9b55-8726dd3f67a3">
							<datasetParameter name="workspace_id">
								<datasetParameterExpression><![CDATA[$P{workspace_id}]]></datasetParameterExpression>
							</datasetParameter>
							<datasetParameter name="host_address_clause">
								<datasetParameterExpression><![CDATA[$P{host_address_clause}]]></datasetParameterExpression>
							</datasetParameter>
							<datasetParameter name="desired_type">
								<datasetParameterExpression><![CDATA["origin"]]></datasetParameterExpression>
							</datasetParameter>
						</datasetRun>
					</dataset>
					<keyExpression><![CDATA[$F{item_type}]]></keyExpression>
					<valueExpression><![CDATA[$F{item_count}]]></valueExpression>
				</pieDataset>
				<piePlot labelFormat="{0}: {1} ({2})">
					<plot/>
					<itemLabel>
						<font size="6"/>
					</itemLabel>
				</piePlot>
			</pieChart>
			<pieChart>
				<chart customizerClass="com.jaspersoft.bizdev.PieLabels" theme="se_charts">
					<reportElement uuid="2a55e962-0786-41de-be07-7f2548cd4593" x="286" y="20" width="286" height="250"/>
					<chartTitle/>
					<chartSubtitle/>
					<chartLegend/>
				</chart>
				<pieDataset maxCount="10">
					<dataset>
						<datasetRun subDataset="CredentialsDataset" uuid="27e7d99f-e94d-495c-9b55-8726dd3f67a3">
							<datasetParameter name="workspace_id">
								<datasetParameterExpression><![CDATA[$P{workspace_id}]]></datasetParameterExpression>
							</datasetParameter>
							<datasetParameter name="host_address_clause">
								<datasetParameterExpression><![CDATA[$P{host_address_clause}]]></datasetParameterExpression>
							</datasetParameter>
							<datasetParameter name="desired_type">
								<datasetParameterExpression><![CDATA["private"]]></datasetParameterExpression>
							</datasetParameter>
						</datasetRun>
					</dataset>
					<keyExpression><![CDATA[$F{item_type}]]></keyExpression>
					<valueExpression><![CDATA[$F{item_count}]]></valueExpression>
				</pieDataset>
				<piePlot isShowLabels="true" labelFormat="{0}: {1} ({2})">
					<plot/>
					<itemLabel>
						<font size="6"/>
					</itemLabel>
				</piePlot>
			</pieChart>
			<textField>
				<reportElement uuid="24eb3a91-b714-4830-adfc-187636addfef" style="Graph title" mode="Opaque" x="286" y="0" width="286" height="20"/>
				<textElement/>
				<textFieldExpression><![CDATA["Private Types"]]></textFieldExpression>
			</textField>
		</band>
	</detail>
</jasperReport>
