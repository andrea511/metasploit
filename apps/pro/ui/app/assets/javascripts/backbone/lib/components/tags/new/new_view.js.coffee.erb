define [
  'jquery',
  'lib/components/tags/new/templates/tag_form_layout'
  'base_view'
  'base_itemview'
  'base_layout'
  'css!css/components/tags/new'
  '<%= javascript_path("jquery.tokeninput") %>'
], ($, Template, TokenInput, ModalForm) ->
  @Pro.module 'Components.Tags.New', (New, App, Backbone, Marionette, $, _) ->

    class New.TagForm extends App.Views.Layout
      template: @::templatePath 'tags/new/tag_form_layout'

      # Options:
      # tokenValue: set to +name+ to just send names back
      initialize: (opts={}) ->
        @model.set('informationAssetTag', '<%= image_tag('icons/silky/information.png') %>')
        $.extend(@, opts)
        super

      serialize: => @

      focus: => @$el.find('input:visible').focus()

      #
      # Marionette callbacks
      #
      onShow: =>
        # install the token input plugin
        nameField = @_nameField()
        wid = @workspace_id || window.WORKSPACE_ID
        route = Routes.search_workspace_tags_path(wid, format: 'json')
        unless nameField.data('tokenInputObject')?
          @tokenInput = nameField.tokenInput route, {
            theme: "metasploit"
            hintText: "Type in a tag name..."
            searchingText: "Searching tags..."
            allowCustomEntry: true
            preventDuplicates: true
            allowFreeTagging: true
            resultsLimit: 3
            tokenValue: @tokenValue ? 'id'
            onAdd: =>
              @trigger('token:changed')
            onRemove: =>
              @trigger('token:changed')
          }

        window.Forms.renderHelpLinks(@el)

      #
      # Helpers
      #

      _nameField: => $('[name=name]', @el)

      _removeError: =>
        $('form .error-box', @el).remove()

      _showError: (err) =>
        @_removeError()
        $errDiv = $('<div />', class: 'error-box')
        err = err.substr(err.indexOf(" ") + 1)
        $errDiv.text(err)
        $('form', @el).prepend($errDiv)
