define [
  'base_controller'
  'lib/components/tooltip/tooltip_views'
], () ->
  @Pro.module "Components.Tooltip", (Tooltip, App) ->

    #
    # Contains the Tooltip
    #
    class Tooltip.Controller extends App.Controllers.Application

      # Hash of default options for controller
      # @option opts title       [String] the title for the tooltip
      # @option opts content     [String] the content for the tooltip
      # @option opts view        [Marionette.View] the view to render instead of the content string
      #
      defaults: ->
        title: 'Title'
        content: 'Default Content'

      # Create a new instance of the Tooltip Controller and adds it to the
      # region passed in through the options hash
      #
      # @param [Object] options the option hash
      initialize: (options = {}) ->
        config = _.defaults options, @_getDefaults()
        model = new Backbone.Model(config)
        view = new Tooltip.View()
        model.set('cid',view.cid)
        model.set('informationAssetTag', '<%= image_tag('icons/silky/information.png') %>')
        view.model = model

        #If view specified then use the view in the content region
        if config.view?
          @listenTo @_mainView, 'show', ->
            @show config.view, region: @_mainView.contentRegion

        @setMainView(view)


    # Register an Application-wide handler for a tooltip controller
    App.reqres.setHandler 'tooltip:component', (options={})->
      new Tooltip.Controller options