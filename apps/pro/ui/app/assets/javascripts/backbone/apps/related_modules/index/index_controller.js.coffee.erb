define [
  'base_controller'
  'apps/related_modules/related_modules_app'
  'apps/related_modules/index/index_views'
  'lib/components/analysis_tab/analysis_tab_controller'
  'lib/components/table/table_controller'
  'lib/components/pill/pill_controller'
  'lib/components/stars/stars_controller'
  'lib/components/os/os_controller'
  'lib/components/tabs/tabs_controller'
  'lib/shared/cve_cell/cve_cell_controller'
  'lib/components/tags/index/index_controller'
  'lib/concerns/pollable'
], ->
  @Pro.module "RelatedModulesApp.Index", (Index, App, Backbone, Marionette, $, _) ->
    class Index.Controller extends App.Controllers.Application

      # Create a new instance of the IndexController and adds it to the region if show is true
      #
      # @param opts [Object] the options hash
      # @options options show        [Boolean] show view on initialization
      #
      initialize: (options) ->
        _.defaults options,
          show: true

        { show } = options

        modules = App.request 'workspaceRelatedModules:entities'
          workspace_id: WORKSPACE_ID

        defaultSort = 'disclosure_date'

        columns = [
          {
            label: 'Platform'
            attribute: 'module_icons'
            view: Pro.Components.Os.Controller
            sortable: false
          },
          {
            label: 'Module'
            attribute: 'module'
            sortable: true
            sortAttribute: 'name'
            view: Index.AddressCellView
          },
          {
            label: 'Hosts'
            attribute: 'hosts'
            view: Index.HostAddressCellView
            sortable:  false
          },
          {
            label: 'Vulnerabilities'
            attribute: 'module_vulns'
            view: Index.VulnerabilityCellView
            sortable:  false
          },
          {
            label: 'References'
            attribute: 'references'
            view: Pro.Shared.CveCell.Controller
            sortable:  false
          },
          {
            label: 'Disclosure'
            attribute: 'disclosure_date'
            sortable: true
            view: Index.DateCellView
          },
          {
            label: 'Ranking'
            attribute: 'rating'
            sortAttribute: 'rank'
            view: Pro.Components.Stars.Controller
          }
        ]
        actionButtons = [
          {
            label: 'Scan'
            class: 'scan'
            click: (selectAllState, selectedIDs, deselectedIDs, selectedVisibleCollection, tableCollection) ->
              newScanPath = Routes.new_scan_path workspace_id: WORKSPACE_ID
              App.execute 'analysis_tab:post', 'vuln', newScanPath, {
                selectAllState
                selectedIDs
                deselectedIDs
              }
          }
          {
            label: 'Import...'
            class: 'import'
            click: ->
              window.location = Routes.new_workspace_import_path(workspace_id: WORKSPACE_ID) + '#file'
          }
          {
            label: 'Nexpose Scan'
            class: 'nexpose'
            click: ->
              window.location = Routes.new_workspace_import_path workspace_id: WORKSPACE_ID
          }
          {
            label: 'WebScan'
            class: 'webscan'
            click: (selectAllState, selectedIDs, deselectedIDs, selectedVisibleCollection, tableCollection) ->
              newWebScanPath = Routes.new_webscan_path workspace_id: WORKSPACE_ID
              App.execute 'analysis_tab:post', 'vuln', newWebScanPath, {
                selectAllState
                selectedIDs
                deselectedIDs
              }
            containerClass: 'action-button-left-separator'
          }
          {
            label: 'Bruteforce'
            class: 'brute'
            click: (selectAllState, selectedIDs, deselectedIDs, selectedVisibleCollection, tableCollection) ->
              newQuickBruteforcePath = Routes.workspace_brute_force_guess_index_path(workspace_id: WORKSPACE_ID) + '#quick'
              App.execute 'analysis_tab:post', 'vuln', newQuickBruteforcePath, {
                selectAllState
                selectedIDs
                deselectedIDs
              }
          }
          {
            label: 'Exploit'
            class: 'exploit'
            click: (selectAllState, selectedIDs, deselectedIDs, selectedVisibleCollection, tableCollection) ->
              newExploitPath = Routes.new_exploit_path(workspace_id: WORKSPACE_ID) + '#quick'
              App.execute 'analysis_tab:post', 'vuln', newExploitPath, {
                selectAllState
                selectedIDs
                deselectedIDs
              }
            containerClass: 'action-button-right-separator'
          }
        ]

        filterOpts =
          searchType: 'pro'
          placeHolderText: 'Search Modules'

        emptyView = App.request 'analysis_tab:empty_view',
          emptyText: "No Modules are associated with this project"

        _.extend options,
          filterOpts: filterOpts
          collection: modules
          columns: columns
          defaultSort: defaultSort
          actionButtons: actionButtons
          emptyView: emptyView


        @analysisTabController = App.request('analysis_tab:component', options)
        @layout = @analysisTabController.layout

        @setMainView @layout
        @show @layout, region: @region if show


